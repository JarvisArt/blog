(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{363:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git命令"}},[t._v("#")]),t._v(" Git命令")]),t._v(" "),a("h4",{attrs:{id:"git版本控制常见的操作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git版本控制常见的操作流程"}},[t._v("#")]),t._v(" Git版本控制常见的操作流程")]),t._v(" "),a("p",[t._v(" 1.写代码，此时新增或者更改的代码记录都存放在"),a("code",[t._v("工作区")]),a("br"),t._v("\n 2.执行 "),a("code",[t._v("git add .")]),t._v(" 将全部有更改代码的文件从"),a("code",[t._v("工作区")]),t._v("添加到"),a("code",[t._v("暂存区")]),a("br"),t._v("\n 3.执行 "),a("code",[t._v('git commit -m "describe"')]),t._v(" 将"),a("code",[t._v("暂存区")]),t._v("提交本地仓库("),a("code",[t._v("版本库")]),t._v(")并生成一个提交记录\n 4.执行 "),a("code",[t._v("git log")]),t._v(" 查看提交历史记录（包括上一步提交的记录）"),a("br"),t._v("\n 5.执行 "),a("code",[t._v("git push origin master")]),t._v(" 将本地仓库的提交记录推到远程仓库（"),a("code",[t._v("origin")]),t._v("）的"),a("code",[t._v("master")]),t._v("分支")]),t._v(" "),a("h4",{attrs:{id:"git的3层结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git的3层结构"}},[t._v("#")]),t._v(" Git的3层结构")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("working directory(工作区)")]),t._v("：直接编辑文件的地方，肉眼可见直接操作")]),t._v(" "),a("li",[a("code",[t._v("staging index(暂存区)")]),t._v("：数据（快照）暂时存放的地方")]),t._v(" "),a("li",[a("code",[t._v("git directory(版本库)")]),t._v("：存放已经提交的数据")])]),t._v(" "),a("h4",{attrs:{id:"git中文件的4种状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git中文件的4种状态"}},[t._v("#")]),t._v(" Git中文件的4种状态")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Untracked")]),t._v("：未被追踪")]),t._v(" "),a("li",[a("code",[t._v("Modified")]),t._v("：表示工作区修改了某个文件但是还没有添加到暂存区")]),t._v(" "),a("li",[a("code",[t._v("Staged")]),t._v("：表示把工作区修改的文件添加到了暂存区但是没有提交到版本库")]),t._v(" "),a("li",[a("code",[t._v("Committed")]),t._v("：表表示数据被安全的存储在本地库中")])]),t._v(" "),a("h4",{attrs:{id:"基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"youName"')]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置Git全局信息Name")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"youEmail"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置Git全局信息Email")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"youName"')]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置Git当前仓库信息Name")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"youEmail"')]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置Git当前仓库信息Email")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看配置信息列表")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init                                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化本地仓库")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看文件更改状态")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" filename                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把该文件从工作区添加到暂存区")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("                                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把全部有更改的文件从工作区添加到暂存区")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"describe"')]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将暂存区提交本地仓库 ")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"describe"')]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将工作区提交本地仓库")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log                                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看提交历史")]),t._v("\n")])])]),a("h4",{attrs:{id:"撤销操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[t._v("#")]),t._v(" 撤销操作")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- filename                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取暂存区的文件并将其替工作区的文件")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD -- filename                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取最近一次提交的版本中的这个文件到暂存区，该操作不影响工作区")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地改变撤销，变成之前的状态（回退版本）")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销上一次提交 并将暂存区的文件重新提交")]),t._v("\n")])])]),a("h4",{attrs:{id:"存储操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储操作"}},[t._v("#")]),t._v(" 存储操作")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash save "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"describe"')]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本次代码改动存储起来")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看存储列表")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash show                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看最近一个存储文件的改动，查看某个(num)存储的改动：git stash show stash@{num}")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash show -p                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看第一个存储文件代码的改动，查看某个(num)存储的改动：git stash show stash@{num} -p")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用第一个存储，不会从存储列表中删除，应用某个(num)存储：git stash apply stash@{num}")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用第一个存储，并从存储列表中删除，应用某个(num)存储：git stash pop stash@{num}")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除第一个存储，删除某个(num)存储：git stash drop stash@{num}")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),t._v("                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除存储列表的所有存储")]),t._v("\n")])])]),a("h4",{attrs:{id:"文件的删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的删除"}},[t._v("#")]),t._v(" 文件的删除")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached filename                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉删除暂存区里的文件，该操作不影响工作区")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f filename                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除暂存区与工作区的文件")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" filename newfilename               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改文件名称")]),t._v("\n")])])]),a("h4",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看分支")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch branchname                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branchname                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换分支")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d branchname                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -m oldname newname             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改分支名")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b dev                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建并切换到该分支")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并分支")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("                                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较工作区与暂存区的差异")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" -staged                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较暂存区与版本库的文件差异")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" commit_id commit_id              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较两个不同历史版本的差异\t")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" branchname                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较当前分支与branchname分支的差异")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick HEAD                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将另一个分支某个commit(HEAD)转移到当前分支")]),t._v("\n")])])]),a("h4",{attrs:{id:"help文档介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#help文档介绍"}},[t._v("#")]),t._v(" help文档介绍")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" .gitignore                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建.gitignore文件添加不被追踪的文件名")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("                              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找add帮助手册")]),t._v("\n")])])]),a("h4",{attrs:{id:"远程仓库的搭建project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库的搭建project"}},[t._v("#")]),t._v(" 远程仓库的搭建project")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地上传到GitHub仓库")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push https://github.com/JarvisArt/Test.git master\t\t\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生产SHH公钥")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ssh-keygen\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将GitHub仓库下载到本地")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull git@github.com:JarvisArt/Test.git master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关联远程仓库")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" github https://github.com/JarvisArt/Test.git\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看关联的远程仓库的详情信息")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地内容上传到服务器")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push ssh://roo@182.61.20.102/var/git/project.git master\t\n")])])]),a("h4",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 关闭文件名称忽略大小写")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config core.ignorecase "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);